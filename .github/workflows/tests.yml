name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3', '8.4']

    name: PHP ${{ matrix.php-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: pdo, pdo_sqlite, mbstring
          coverage: pcov
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php-version }}-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php-version }}-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Run tests
        run: composer test

      - name: Run tests with coverage
        if: matrix.php-version == '8.3'
        run: vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        if: matrix.php-version == '8.3'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_sqlite, mbstring
          tools: composer:v2, phpstan, php-cs-fixer

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-8.3-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-8.3-
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Check PHP syntax
        run: find Classes Tests -name "*.php" -exec php -l {} \;

      # Uncomment when phpstan is configured
      # - name: Run PHPStan
      #   run: phpstan analyse Classes --level 5

      # Uncomment when php-cs-fixer is configured
      # - name: Run PHP CS Fixer
      #   run: php-cs-fixer fix --dry-run --diff